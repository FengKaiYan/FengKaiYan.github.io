{"version":3,"sources":["common/HeadNav.js","common/DefaultFoot.js","routes/Home/Home.js","routes/Article/Article.js","routes/About/About.js","routes/Resource/Resource.js","layouts/DefaultLayout/DefaultLayout.js","layouts/LoginUser/LoginUser.js","router.js","App.js","serviceWorker.js","index.js"],"names":["HeadNav","state","current","handleClick","e","setState","key","id","className","type","selectedKeys","this","mode","onClick","Item","to","Component","DefaultFoot","Home","props","fetch","method","then","res","console","log","json","data","Article","About","Resource","DefaultLayout","path","match","url","component","exact","LoginUser","RouterWrap","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iVAMqBA,G,kNACjBC,MAAQ,CACJC,QAAS,Q,EAEbC,YAAY,SAACC,GACT,EAAKC,SAAS,CAACH,QAAQE,EAAEE,O,wEAGzB,OACI,yBAAKC,GAAG,WACJ,yBAAKC,UAAU,YACX,yBAAKA,UAAU,iBACX,uBAAMC,KAAK,SAASD,UAAU,cAElC,yBAAKA,UAAU,iBACX,uBACIE,aAAc,CAACC,KAAKV,MAAMC,SAC1BU,KAAK,aACLC,QAASF,KAAKR,aAEd,sBAAMW,KAAN,CAAWR,IAAI,QACX,kBAAC,IAAD,CAAMS,GAAG,SAAT,iBAEJ,sBAAMD,KAAN,CAAWR,IAAI,WACX,kBAAC,IAAD,CAAMS,GAAG,eAAT,uBAEJ,sBAAMD,KAAN,CAAWR,IAAI,WACb,kBAAC,IAAD,CAAMS,GAAG,iBAAT,6BAEF,sBAAMD,KAAN,CAAWR,IAAI,YACX,kBAAC,IAAD,CAAMS,GAAG,kBAAT,qC,GA9BKC,cCFhBC,G,wLAEb,OACI,yBAAKV,GAAG,eAAR,4C,GAH6BS,cCHpBE,G,mBACjB,WAAYC,GAAO,IAAD,6BACd,4CAAMA,IACNC,MAAM,QAAQ,CAACC,OAAO,QAAQC,MAC1B,SAASC,GACLC,QAAQC,IAAIF,GACZA,EAAIG,OAAOJ,MAAK,SAASK,GACrBH,QAAQC,IAAIE,SANV,E,sEAYd,OACI,yBAAKpB,GAAG,QAAR,oB,GAdsBS,cCCbY,E,iLAEb,OACI,yBAAKrB,GAAG,WAAR,gC,GAHyBS,aCAhBa,E,iLAEb,OACI,uD,GAHuBb,aCAdc,E,iLAEb,OACI,6D,GAH0Bd,aCQjBe,E,iLAEb,OACI,yBAAKxB,GAAG,iBACJ,kBAAC,EAAD,MACI,yBAAKA,GAAG,gBACJ,kBAAC,IAAD,CAAOyB,KAAMrB,KAAKQ,MAAMc,MAAMC,IAAI,IAAKC,UAAWjB,EAAMkB,OAAK,IAC7D,kBAAC,IAAD,CAAOJ,KAAMrB,KAAKQ,MAAMc,MAAMC,IAAI,WAAYC,UAAWP,IACzD,kBAAC,IAAD,CAAOI,KAAMrB,KAAKQ,MAAMc,MAAMC,IAAI,SAAUC,UAAWN,IACvD,kBAAC,IAAD,CAAOG,KAAMrB,KAAKQ,MAAMc,MAAMC,IAAI,YAAaC,UAAWL,KAElE,kBAAC,EAAD,W,GAX2Bd,aCRtBqB,E,iLAEb,OACI,yBAAK9B,GAAG,aAAR,iB,GAH2BS,aCGlBsB,E,iLAEb,OACI,yBAAK/B,GAAG,UACJ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyB,KAAK,IAAIG,UAAWE,EAAYD,OAAK,IAC5C,kBAAC,IAAD,CAAOJ,KAAK,QAAQG,UAAWJ,W,GAPff,aCSzBuB,G,wLARX,OACE,yBAAK/B,UAAU,OACb,kBAAC,EAAD,W,GAJUQ,cCQEwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASV,MACvB,2DCZNW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5B,MAAK,SAAA6B,GACjCA,EAAaC,iB","file":"static/js/main.4cccec08.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Menu,Icon} from 'antd'\r\nimport './HeadNav.less'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default class HeadNav extends Component {\r\n    state = {\r\n        current: 'home',\r\n    }\r\n    handleClick=(e)=>{ //点击事件\r\n        this.setState({current:e.key});\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"HeadNav\">\r\n                <div className=\"nav-wrap\">\r\n                    <div className=\"nav-logo-wrap\">\r\n                        <Icon type=\"global\" className=\"nav-logo\" />\r\n                    </div>\r\n                    <div className=\"nav-list-wrap\">\r\n                        <Menu\r\n                            selectedKeys={[this.state.current]}\r\n                            mode=\"horizontal\"\r\n                            onClick={this.handleClick}\r\n                        >\r\n                            <Menu.Item key=\"home\">\r\n                                <Link to=\"/home\">首页</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"aboutme\">\r\n                                <Link to=\"/home/about\">关于我</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"article\">\r\n                              <Link to=\"/home/article\">文章分享</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"resource\">\r\n                                <Link to=\"/home/resource\">资源共享</Link>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport './DefaultFoot.less'\r\n\r\n\r\nexport default class DefaultFoot extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"DefaultFoot\">\r\n                我来组成腿部\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from \"react\";\r\nexport default class Home extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        fetch(\"/demo\",{method:'GET'}).then(\r\n            function(res){\r\n                console.log(res);\r\n                res.json().then(function(data){\r\n                    console.log(data);\r\n                });\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"Home\">\r\n                首页\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Article extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"Article\">\r\n                文章分享\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                关于我\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Resource extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                资源共享\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport HeadNav from '../../common/HeadNav'\r\nimport DefaultFoot from '../../common/DefaultFoot'\r\nimport './DefaultLayout.less'\r\nimport {Route} from 'react-router-dom'\r\nimport Home from '../../routes/Home/Home'\r\nimport Article from '../../routes/Article/Article'\r\nimport About from '../../routes/About/About'\r\nimport Resource from '../../routes/Resource/Resource'\r\n\r\nexport default class DefaultLayout extends Component{\r\n    render(){\r\n        return (\r\n            <div id=\"DefaultLayout\">\r\n                <HeadNav/>\r\n                    <div id=\"content-wrap\">\r\n                        <Route path={this.props.match.url+'/'} component={Home} exact/>\r\n                        <Route path={this.props.match.url+'/article'} component={Article} />\r\n                        <Route path={this.props.match.url+'/about'} component={About} />\r\n                        <Route path={this.props.match.url+'/resource'} component={Resource} />\r\n                    </div>\r\n                <DefaultFoot/>\r\n            </div>\r\n        )\r\n    }\r\n}    ","import React, { Component } from 'react'\r\n\r\nexport default class LoginUser extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"LoginUser\">\r\n                LoginUser\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {HashRouter,Route,Switch} from 'react-router-dom';\r\nimport DefaultLayout from './layouts/DefaultLayout/DefaultLayout';\r\nimport LoginUser from './layouts/LoginUser/LoginUser';\r\n\r\nexport default class RouterWrap extends Component{\r\n    render(){\r\n        return (\r\n            <div id=\"router\">\r\n                <HashRouter>\r\n                    <Switch>\r\n                        <Route path=\"/\" component={LoginUser}  exact />\r\n                        <Route path=\"/home\" component={DefaultLayout} />\r\n                    </Switch>\r\n                </HashRouter>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport RouterWrap from './router';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <RouterWrap/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}